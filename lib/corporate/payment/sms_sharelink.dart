import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:fluttersipay/corporate/payment/success_sharelink.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';

TextEditingController _phoneController = TextEditingController();

class Sms_Sharelink extends StatefulWidget {
  Sms_Sharelink({Key key}) : super(key: key);
  @override
  _Sms_Sharelink createState() => _Sms_Sharelink();
}

class _Sms_Sharelink extends State<Sms_Sharelink> {
  bool _checkphone = true;
  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    SystemChrome.setPreferredOrientations([
      DeviceOrientation.portraitUp,
      DeviceOrientation.portraitDown,
    ]);
    ScreenUtil.instance = ScreenUtil.getInstance()..init(context);
    ScreenUtil.instance =
        ScreenUtil(width: 750, height: 1304, allowFontScaling: true)
          ..init(context);
    return new FutureBuilder(
        future: DefaultAssetBundle.of(context)
            .loadString('assets/json/register/2.1Register.json'),
        builder: (context, snapshot) {
          Autogenerated users;
          var parsedJson;
          if (snapshot.hasData) {
            parsedJson = json.decode(snapshot.data.toString());
            users = Autogenerated.fromJson(parsedJson);
            return new Scaffold(
              appBar: AppBar(
                centerTitle: true,
                title: Text('SHARE LINK'),
                flexibleSpace: Image(
                  image: AssetImage('assets/appbar_bg.png'),
                  height: 100,
                  fit: BoxFit.fitWidth,
                ),
                leading: Builder(
                  builder: (BuildContext context) {
                    return IconButton(
                      icon: const Icon(Icons.arrow_back_ios),
                      onPressed: () {
                        Navigator.pop(context);
                      },
                    );
                  },
                ),
                actions: <Widget>[
                  IconButton(
                    padding: const EdgeInsets.only(right: 20.0),
                    icon: Icon(
                      FontAwesomeIcons.commentAlt,
                      color: Colors.white,
                    ),
                    onPressed: () {
                      // do something
                    },
                  )
                ],
              ),
              body: SingleChildScrollView(
                  child: Padding(
                      padding: EdgeInsets.only(left: 30.0, right: 30.0),
                      child: Column(
                        children: <Widget>[
                          SizedBox(
                            height: ScreenUtil.getInstance().setWidth(60),
                          ),
                          Align(
                            alignment: Alignment.centerLeft,
                            child: Text(
                              'SHARE DPL LINK VIA SMS',
                              style: TextStyle(
                                fontSize: 16,
                                fontWeight: FontWeight.bold,
                                color: Colors.black,
                              ),
                            ),
                          ),
                          SizedBox(
                            height: ScreenUtil.getInstance().setWidth(50),
                          ),
                          Container(
                            child: Text(
                              'You can share the payment link DPL #335 via SMS.',
                              style: TextStyle(
                                fontSize: 16,
                                color: Colors.black45,
                              ),
                            ),
                            width: ScreenUtil.getInstance().setWidth(690),
                          ),
                          SizedBox(
                            height: ScreenUtil.getInstance().setHeight(100),
                          ),
                          Row(
                            children: <Widget>[
                              Expanded(
                                child: Text('DPL #335 - One Time Link',
                                    style: TextStyle(
                                        color: Colors.black45, fontSize: 15)),
                              ),
                              Expanded(
                                child: Container(
                                    child: Align(
                                  alignment: Alignment.bottomRight,
                                  child: Text(
                                    '102,00 TL',
                                    style: TextStyle(
                                        color: Colors.black87, fontSize: 15),
                                  ),
                                )),
                              ),
                            ],
                          ),
                          SizedBox(
                            height: 20,
                          ),
                          Divider(
                            color: Colors.black26,
                            height: 1.0,
                          ),
                          SizedBox(
                            height: ScreenUtil.getInstance().setHeight(30),
                          ),
                          Row(
                            children: <Widget>[
                              Expanded(
                                child: Text('Expiry',
                                    style: TextStyle(
                                        color: Colors.black45, fontSize: 15)),
                              ),
                              Expanded(
                                child: Container(
                                    child: Align(
                                  alignment: Alignment.bottomRight,
                                  child: Text(
                                    '14.09.2019 23:59',
                                    style: TextStyle(
                                        color: Colors.black87, fontSize: 15),
                                  ),
                                )),
                              ),
                            ],
                          ),
                          SizedBox(
                            height: 20,
                          ),
                          Divider(
                            color: Colors.black26,
                            height: 1.0,
                          ),
                          SizedBox(
                            height: ScreenUtil.getInstance().setHeight(120),
                          ),
                          Align(
                            alignment: Alignment.topLeft,
                            child: Text(
                              'RECIEVER GSM NUMBER',
                              style: TextStyle(
                                fontSize: 12,
                                color: Colors.black45,
                              ),
                            ),
                          ),
                          SizedBox(
                            height: ScreenUtil.getInstance().setHeight(20),
                          ),
                          Container(
                            child: Padding(
                              padding: EdgeInsets.only(left: 10.0, right: 10.0),
                              child: _checkphone
                                  ? Container(
                                      child: Text(
                                        '',
                                        style: TextStyle(
                                          color: Colors.black38,
                                        ),
                                      ),
                                      height: 0,
                                    )
                                  : Row(
                                      children: <Widget>[
                                        Text(
                                          users.fail.user,
                                          style: TextStyle(
                                            color: Colors.red,
                                          ),
                                        ),
                                        GestureDetector(
                                          onTap: () {
                                            Navigator.pop(context);
                                          },
                                          child: Text(
                                            users.fail.login,
                                            style: TextStyle(
                                              color: Colors.blue,
                                            ),
                                          ),
                                        )
                                      ],
                                    ),
                            ),
                          ),
                          TextField(
                            onChanged: (text) {
                              if (text.length > 0 && !_checkphone) {
                                setState(() {
                                  _checkphone = true;
                                });
                              }
                            },
                            style: TextStyle(
                                color: _checkphone ? Colors.black : Colors.red),
                            controller: _phoneController,
                            keyboardType: TextInputType.phone,
                            decoration: InputDecoration(
//                              hintText: 'Phone Number',
//                              hintStyle: CustomTextStyle.formField(context),
                              enabledBorder: UnderlineInputBorder(
                                  borderSide: BorderSide(
                                      color: _checkphone
                                          ? Colors.black38
                                          : Colors.red,
                                      width: 1.0)),
                              focusedBorder: UnderlineInputBorder(
                                  borderSide: BorderSide(
                                      color: _checkphone
                                          ? Colors.black38
                                          : Colors.red,
                                      width: 1.0)),
                              prefixIcon: _checkphone
                                  ? const Icon(
                                      Icons.phone,
                                      color: Colors.black38,
                                    )
                                  : const Icon(
                                      Icons.cancel,
                                      color: Colors.red,
                                    ),
                            ),
                            inputFormatters: [
                              WhitelistingTextInputFormatter.digitsOnly,
                              // Fit the validating format.
//                _phoneNumberFormatter,
                            ],
                            obscureText: false,
                          ),
                          SizedBox(
                            height: ScreenUtil.getInstance().setHeight(130),
                          ),
                          Container(
                            child: FlatButton(
                              onPressed: () {
                                if (_phoneController.text.length == 0) {
                                  Navigator.pop(context);
                                  Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                        builder: (context) =>
                                            Success_Sharelink(),
                                      ));
                                } else {
                                  setState(() {
                                    _checkphone = false;
                                  });
                                }
                              },
                              color: Colors.blue,
                              disabledColor: Colors.blue,
                              padding: EdgeInsets.all(15.0),
                              child: Text(
                                'SEND SMS',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 16,
                                ),
                              ),
                            ),
                            width: ScreenUtil.getInstance().setWidth(690),
                          ),
                        ],
                      ))),
            );
          } else if (snapshot.hasError) {
            return Text("${snapshot.error}");
          }
          return CircularProgressIndicator();
        });
  }
}

class Autogenerated {
  String header;
  String create;
  String sign;
  String phone;
  String have;
  String button;
  User user;
  Fail fail;

  Autogenerated(
      {this.header,
      this.create,
      this.sign,
      this.phone,
      this.have,
      this.button,
      this.user,
      this.fail});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    header = json['header'];
    create = json['create'];
    sign = json['sign'];
    phone = json['phone'];
    have = json['Have'];
    button = json['button'];
    user = json['User'] != null ? new User.fromJson(json['User']) : null;
    fail = json['fail'] != null ? new Fail.fromJson(json['fail']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['header'] = this.header;
    data['create'] = this.create;
    data['sign'] = this.sign;
    data['phone'] = this.phone;
    data['Have'] = this.have;
    data['button'] = this.button;
    if (this.user != null) {
      data['User'] = this.user.toJson();
    }
    if (this.fail != null) {
      data['fail'] = this.fail.toJson();
    }
    return data;
  }
}

class User {
  String user;
  String and;
  String privacy;

  User({this.user, this.and, this.privacy});

  User.fromJson(Map<String, dynamic> json) {
    user = json['User'];
    and = json['and'];
    privacy = json['privacy'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['User'] = this.user;
    data['and'] = this.and;
    data['privacy'] = this.privacy;
    return data;
  }
}

class Fail {
  String user;
  String login;

  Fail({this.user, this.login});

  Fail.fromJson(Map<String, dynamic> json) {
    user = json['user'];
    login = json['login'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['user'] = this.user;
    data['login'] = this.login;
    return data;
  }
}
